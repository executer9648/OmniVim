general:
  # Commands to run when the WM has started (e.g. to run a script or launch
  # another application). Here we are running a batch script to start Zebar.
  startup_commands: ['shell-exec --command %userprofile%/.glzr/zebar/start.bat']

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: 'window_focus'

gaps:
  # Gap between adjacent windows.
  inner_gap: '10px'

  # Gap between windows and the screen edge.
  outer_gap:
    top: '60px'
    right: '20px'
    bottom: '20px'
    left: '20px'

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    border:
      enabled: true
      color: "#0000ff"

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: false
      color: "#d3d3d3"

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: 'tiling'

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: false

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

workspaces:
  - name: '1'
  - name: '2'
  - name: '3'
  - name: '4'
  - name: '5'
  - name: '6'
  - name: '7'
  - name: '8'
  - name: '9'

window_rules:
  - commands: ['ignore']
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: 'zebar' }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: '[Pp]icture.in.[Pp]icture' }
        window_class: { regex: 'Chrome_WidgetWin_1|MozillaDialogClass' }

binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: 'resize'
    keybindings:
      - commands: ['resize --width -2%']
        bindings: ['h', 'left']
      - commands: ['resize --width +2%']
        bindings: ['l', 'right']
      - commands: ['resize --height +2%']
        bindings: ['k', 'up']
      - commands: ['resize --height -2%']
        bindings: ['j', 'down']
      # Press enter/escape to return to default keybindings.
      - commands: ['wm-disable-binding-mode --name resize']
        bindings: ['escape', 'enter']

  # When enabled, all keybindings are disabled except for alt+shift+p which
  # returns to default keybindings.
  - name: 'pause'
    keybindings:
      - commands: ['wm-disable-binding-mode --name pause']
        bindings: ['alt+shift+p']

  - name: "vim"
    keybindings:
      # Change the focused window to be floating / tiling.
      - commands: ['toggle-floating --centered', "wm-disable-binding-mode --name vim"]
        bindings: ["f","control+f","alt+f"]

      - commands: ['toggle-tiling',"wm-disable-binding-mode --name vim"]
        bindings: ['t']

      - commands: ['toggle-fullscreen',"wm-disable-binding-mode --name vim"]
        bindings: ['x']

      - commands: ['toggle-minimized',"wm-disable-binding-mode --name vim"]
        bindings: ['m']

      # Close focused window.
      - commands: ['close',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+q']

      # Kill GlazeWM process safely.
      - commands: ['wm-exit']
        bindings: ['alt+shift+e']

      # Change focus between floating / tiling windows.
      - commands: ["wm-cycle-focus","wm-disable-binding-mode --name vim"]
        bindings: ["s","control+s","alt+s"]

      - commands: ['wm-reload-config',"wm-disable-binding-mode --name vim"]
        bindings: ["r"]

      # Change focus to a workspace defined in `workspaces` config.
      - commands: ['focus --workspace 1',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+1',1]
      - commands: ['focus --workspace 2',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+2',2]
      - commands: ['focus --workspace 3',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+3',3]
      - commands: ['focus --workspace 4',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+4',4]
      - commands: ['focus --workspace 5',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+5',5]
      - commands: ['focus --workspace 6',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+6',6]
      - commands: ['focus --workspace 7',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+7',7]
      - commands: ['focus --workspace 8',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+8',8]
      - commands: ['focus --workspace 9',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+9',9]

      # Launch CMD terminal. Alternatively, use `shell-exec --command wt` or
      # `shell-exec --command %ProgramFiles%/Git/git-bash.exe` to start Windows
      # Terminal and Git Bash respectively.
      - commands: ['shell-exec --command cmd',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+enter']

      # Move focused window to a workspace defined in `workspaces` config.
      - commands: ['move --workspace 1', 'focus --workspace 1',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+1','shift+1']
      - commands: ['move --workspace 2', 'focus --workspace 2',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+2','shift+2']
      - commands: ['move --workspace 3', 'focus --workspace 3',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+3','shift+3']
      - commands: ['move --workspace 4', 'focus --workspace 4',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+4','shift+4']
      - commands: ['move --workspace 5', 'focus --workspace 5',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+5','shift+5']
      - commands: ['move --workspace 6', 'focus --workspace 6',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+6','shift+6']
      - commands: ['move --workspace 7', 'focus --workspace 7',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+7','shift+7']
      - commands: ['move --workspace 8', 'focus --workspace 8',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+8','shift+8']
      - commands: ['move --workspace 9', 'focus --workspace 9',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+9','shift+9']

      # Shift focus in a given direction.
      - commands: ['focus --direction left', "wm-disable-binding-mode --name vim"]
        bindings: ["h","alt+h","control+h"]
      - commands: ['focus --direction right', "wm-disable-binding-mode --name vim"]
        bindings: ["l","alt+l","control+l"]
      - commands: ['focus --direction up', "wm-disable-binding-mode --name vim"]
        bindings: ["k","alt+k","control+k"]
      - commands: ['focus --direction down', "wm-disable-binding-mode --name vim"]
        bindings: ["j","alt+j","control+j"]

    # Resize focused window by a percentage or pixel amount.
      - commands: ['resize --width -2%']
        bindings: ['alt+u']
      - commands: ['resize --width +2%']
        bindings: ['alt+p']
      - commands: ['resize --height +2%']
        bindings: ['alt+o']
      - commands: ['resize --height -2%']
        bindings: ['alt+i']

      # Move focused window in a given direction.
      - commands: ['move --direction left',"wm-disable-binding-mode --name vim"]
        bindings: ['shift+h', 'shift+left']
      - commands: ['move --direction right',"wm-disable-binding-mode --name vim"]
        bindings: ['shift+l', 'shift+right']
      - commands: ['move --direction up',"wm-disable-binding-mode --name vim"]
        bindings: ['shift+k', 'shift+up']
      - commands: ['move --direction down',"wm-disable-binding-mode --name vim"]
        bindings: ['shift+j', 'shift+down']

      # Focus the workspace that last had focus.
      - commands: ['focus --recent-workspace',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+w']

      # Move the focused window's parent workspace to a monitor in a given
      # direction.
      - commands: ['move-workspace --direction left',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+h']
      - commands: ['move-workspace --direction right',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+l']
      - commands: ['move-workspace --direction up',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+k']
      - commands: ['move-workspace --direction down',"wm-disable-binding-mode --name vim"]
        bindings: ['alt+shift+j']

      # Change tiling direction. This determines where new tiling windows will be inserted.
#      - commands: ["tiling direction vertical","wm-disable-binding-mode --name vim"]
#        bindings: ["Control+Alt+V","Control+V","V"]
#
#      - commands: ["tiling direction horizontal","wm-disable-binding-mode --name vim"]
#        bindings: ["Control+Alt+S","Control+S","S"]
#
      # Press enter/escape to return to default keybindings.
      - commands: ["wm-disable-binding-mode --name vim"]
        bindings: ["Escape", "Enter"]

keybindings:
  # Shift focus in a given direction.
#  - commands: ['focus --direction left']
#    bindings: ['alt+h', 'alt+left']
#  - commands: ['focus --direction right']
#    bindings: ['alt+l', 'alt+right']
#  - commands: ['focus --direction up']
#    bindings: ['alt+k', 'alt+up']
#  - commands: ['focus --direction down']
#    bindings: ['alt+j', 'alt+down']

  # Move focused window in a given direction.
#  - commands: ['move --direction left']
#    bindings: ['alt+shift+h', 'alt+shift+left']
#  - commands: ['move --direction right']
#    bindings: ['alt+shift+l', 'alt+shift+right']
#  - commands: ['move --direction up']
#    bindings: ['alt+shift+k', 'alt+shift+up']
#  - commands: ['move --direction down']
#    bindings: ['alt+shift+j', 'alt+shift+down']


  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
#  - commands: ['wm-enable-binding-mode --name resize']
#    bindings: ['alt+r']

  # Disables all keybindings until alt+shift+p is pressed again.
  - commands: ['wm-enable-binding-mode --name pause']
    bindings: ['alt+shift+p']

  - commands: ["wm-enable-binding-mode --name vim"]
    bindings: ["alt+w"]
  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ['toggle-tiling-direction']
    bindings: ['alt+v']

#  # Change the focused window to be floating.
#  - commands: ['toggle-floating --centered']
#    bindings: ['alt+shift+space']
#
#  # Change the focused window to be tiling.
#  - commands: ['toggle-tiling']
#    bindings: ['alt+t']

  # Change the focused window to be fullscreen.
#  - commands: ['toggle-fullscreen']
#    bindings: ['alt+f']

  # Minimize focused window.
#  - commands: ['toggle-minimized']
#    bindings: ['alt+m']


  # Re-evaluate configuration file.
#  - commands: ['wm-reload-config']
#    bindings: ['alt+shift+r']

  # Redraw all windows.
  - commands: ['wm-redraw']
    bindings: ['alt+shift+w']

  # Launch CMD terminal. Alternatively, use `shell-exec --command wt` or
  # `shell-exec --command %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  - commands: ['shell-exec --command cmd']
    bindings: ['alt+enter']

  # Focus the next/previous workspace defined in `workspaces` config.
#  - commands: ['focus --next-workspace']
#    bindings: ['alt+s']
#  - commands: ['focus --prev-workspace']
#    bindings: ['alt+a']